{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pholder\\\\FitnessFlicks\\\\src\\\\components\\\\Exercises.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Pagination from \"@mui/material/Pagination\";\nimport { Box, Stack, Typography } from \"@mui/material\";\nimport { exerciseOptions, fetchData } from \"../utils/fetchData\";\nimport ExerciseCard from \"./ExerciseCard\";\nimport Loader from \"./Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Exercises = ({\n  exercises,\n  setExercises,\n  bodyPart\n}) => {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [exercisesPerPage] = useState(6);\n  useEffect(() => {\n    const fetchExercisesData = async () => {\n      let exercisesData = [];\n      if (bodyPart === \"all\") {\n        exercisesData = await fetchData(\"https://exercisedb.p.rapidapi.com/exercises\", exerciseOptions);\n      } else {\n        exercisesData = await fetchData(`https://exercisedb.p.rapidapi.com/exercises/bodyPart/${bodyPart}`, exerciseOptions);\n      }\n      setExercises(exercisesData);\n    };\n    fetchExercisesData();\n  }, [bodyPart]);\n\n  // Pagination\n  const indexOfLastExercise = currentPage * exercisesPerPage;\n  const indexOfFirstExercise = indexOfLastExercise - exercisesPerPage;\n  const currentExercises = exercises.slice(indexOfFirstExercise, indexOfLastExercise);\n  const paginate = (event, value) => {\n    setCurrentPage(value);\n    window.scrollTo({\n      top: 1800,\n      behavior: \"smooth\"\n    });\n  };\n  if (!currentExercises.length) return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 40\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    id: \"exercises\",\n    sx: {\n      mt: {\n        lg: \"109px\"\n      }\n    },\n    mt: \"50px\",\n    p: \"20px\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      fontWeight: \"bold\",\n      sx: {\n        fontSize: {\n          lg: \"44px\",\n          xs: \"30px\"\n        }\n      },\n      mb: \"46px\",\n      children: \"Showing Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      sx: {\n        gap: {\n          lg: \"107px\",\n          xs: \"50px\"\n        }\n      },\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      children: currentExercises.map((exercise, idx) => /*#__PURE__*/_jsxDEV(ExerciseCard, {\n        exercise: exercise\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      sx: {\n        mt: {\n          lg: \"114px\",\n          xs: \"70px\"\n        }\n      },\n      alignItems: \"center\",\n      children: exercises.length > 9 && /*#__PURE__*/_jsxDEV(Pagination, {\n        color: \"standard\",\n        shape: \"rounded\",\n        defaultPage: 1,\n        count: Math.ceil(exercises.length / exercisesPerPage),\n        page: currentPage,\n        onChange: paginate,\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Exercises, \"qc/w78Pbe1Hwe7FZOf3usGVulUM=\");\n_c = Exercises;\nexport default Exercises;\nvar _c;\n$RefreshReg$(_c, \"Exercises\");","map":{"version":3,"names":["React","useEffect","useState","Pagination","Box","Stack","Typography","exerciseOptions","fetchData","ExerciseCard","Loader","jsxDEV","_jsxDEV","Exercises","exercises","setExercises","bodyPart","_s","currentPage","setCurrentPage","exercisesPerPage","fetchExercisesData","exercisesData","indexOfLastExercise","indexOfFirstExercise","currentExercises","slice","paginate","event","value","window","scrollTo","top","behavior","length","fileName","_jsxFileName","lineNumber","columnNumber","id","sx","mt","lg","p","children","variant","fontWeight","fontSize","xs","mb","direction","gap","flexWrap","justifyContent","map","exercise","idx","alignItems","color","shape","defaultPage","count","Math","ceil","page","onChange","size","_c","$RefreshReg$"],"sources":["D:/Pholder/FitnessFlicks/src/components/Exercises.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Pagination from \"@mui/material/Pagination\";\nimport { Box, Stack, Typography } from \"@mui/material\";\n\nimport { exerciseOptions, fetchData } from \"../utils/fetchData\";\nimport ExerciseCard from \"./ExerciseCard\";\nimport Loader from \"./Loader\";\n\nconst Exercises = ({ exercises, setExercises, bodyPart }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [exercisesPerPage] = useState(6);\n\n  useEffect(() => {\n    const fetchExercisesData = async () => {\n      let exercisesData = [];\n\n      if (bodyPart === \"all\") {\n        exercisesData = await fetchData(\n          \"https://exercisedb.p.rapidapi.com/exercises\",\n          exerciseOptions,\n        );\n      } else {\n        exercisesData = await fetchData(\n          `https://exercisedb.p.rapidapi.com/exercises/bodyPart/${bodyPart}`,\n          exerciseOptions,\n        );\n      }\n\n      setExercises(exercisesData);\n    };\n\n    fetchExercisesData();\n  }, [bodyPart]);\n\n  // Pagination\n  const indexOfLastExercise = currentPage * exercisesPerPage;\n  const indexOfFirstExercise = indexOfLastExercise - exercisesPerPage;\n  const currentExercises = exercises.slice(\n    indexOfFirstExercise,\n    indexOfLastExercise,\n  );\n\n  const paginate = (event, value) => {\n    setCurrentPage(value);\n\n    window.scrollTo({ top: 1800, behavior: \"smooth\" });\n  };\n\n  if (!currentExercises.length) return <Loader />;\n\n  return (\n    <Box id=\"exercises\" sx={{ mt: { lg: \"109px\" } }} mt=\"50px\" p=\"20px\">\n      <Typography\n        variant=\"h4\"\n        fontWeight=\"bold\"\n        sx={{ fontSize: { lg: \"44px\", xs: \"30px\" } }}\n        mb=\"46px\"\n      >\n        Showing Results\n      </Typography>\n      <Stack\n        direction=\"row\"\n        sx={{ gap: { lg: \"107px\", xs: \"50px\" } }}\n        flexWrap=\"wrap\"\n        justifyContent=\"center\"\n      >\n        {currentExercises.map((exercise, idx) => (\n          <ExerciseCard key={idx} exercise={exercise} />\n        ))}\n      </Stack>\n      <Stack sx={{ mt: { lg: \"114px\", xs: \"70px\" } }} alignItems=\"center\">\n        {exercises.length > 9 && (\n          <Pagination\n            color=\"standard\"\n            shape=\"rounded\"\n            defaultPage={1}\n            count={Math.ceil(exercises.length / exercisesPerPage)}\n            page={currentPage}\n            onChange={paginate}\n            size=\"large\"\n          />\n        )}\n      </Stack>\n    </Box>\n  );\n};\n\nexport default Exercises;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}